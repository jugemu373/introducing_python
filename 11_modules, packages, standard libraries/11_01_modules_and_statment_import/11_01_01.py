# モジュールとimport文
"""
この章では、Pythonコードを複数のファイルで作り、それらを作っていく。モジュールは、Pythonコードをまとめたファイルに過ぎない。
モジュールは、Pythonコードをまとめたファイルに過ぎない。モジュールにするために特別なことをする必要はない。すべてのPythonコードが
他のコードからモジュールとして使えるようになっている。

他のモジュールのコードは、import文で参照する。こうすると、インポートしたモジュールのコード、変数をプログラム内で使えるようになる。
"""

"""
lunch.pyとfast.pyは異なる場所でインポートをしている。

・メインプログラムのlunch.pyは、今作った新モジュールfastをインポートしている
・モジュールファイルfast.pyは、Python標準ライブラリのrandomモジュールからchoice関数をインポートしている

メインプログラムと自作モジュールではインポートの方法も異なる。

・第1のインポートでは、fastモジュール全体をインポートしているが、pick()を呼び出すためにfastというプレフィックスを付けなければならない。
このimport文を通り過ぎると、メインプログラムは名前の前にfast.を付けさえすれば、fast.pyに含まれるすべてのものにアクセスできるようになる。
モジュールの名前でモジュールの内容を修飾することにより、名前の衝突が避けられる。どこかほかのモジュールにpick()があっても、間違って
それを呼び出すことはしない。
・第2のインポートでは、私たちはモジュール内におり、おかにchoiceという名前のものはないことが分かっているので、randomモジュールから直接choice関数を
インポートしている。
"""

"""
プログラミングの多くの場面と同じように、自分にとってもっとも明確と思えるスタイルを選ぶようにする。
モジュール修飾名(random.choice)の方が安全だが、少し余分にタイプしなければならない。

インポートされるコードが複数の箇所をで使われるかもしれないときには関数の外でインポートし、関数内でしか
使われないことがわかっていれば関数内でインポートするとよいかもしれない。しかし、コードがどのようなモジュールを必要と
するか明確にするために、ファイルの冒頭ですべてのインポートをする人もいる。どちらにも意味がある。
"""