# 相対インポートと絶対インポート
"""
今までのコード例では、次の場所から独自モジュールをインポートしていた。

・カレントディレクトリ
・サブディレクトリchoices
・Python標準ライブラリ

この仕組みは、標準モジュールと同名のローカルモジュールを作ってしまうまではうまく機能する。この場合、どちらをインポートしたらよいだろうか。
Pythonは相対インポートと絶対インポートをサポートする。今までに示してきたコード例はすべて絶対インポートを使っていた。
import rougarou と入力すると、Pythonは、検索パスに含まれる個々のディレクトリでrougarou.pyという名前のファイル(モジュール)か
rougarouという名前のディレクトリ(パッケージ)を探す。

・rougarou.pyが呼び出し元プログラムと同じディレクトリにあれば、そのプログラムの位置から相対的に、
from . import rougarouでインポートできる。
・呼び出し元プログラムの親ディレクトリにある場合には、from .. import rougarouでインポートできる。
・creaturesという兄弟ディレクトリにある場合には、from ..creatures import rougarouでインポートできる。

. や ..という記法は、Unixのカレントディレクトリと親ディレクトリの記法を借用したものだ。
Traps for the Unwary in Python's Import System (Pythonのインポートシステムでうっかりはまりがちな罠)は、
Pythonのインポートでよく問題を詳しく説明している。
"""
