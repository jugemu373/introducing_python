# 名前空間パッケージ
"""
Pythonモジュールは、次の2つの形でパッケージングできることを説明してきた。

・単一のモジュール(.py)
・パッケージ(モジュール、ほかのパッケージを格納するディレクトリ)

名前空間パッケージを使えば、パッケージを複数のディレクトリに分割することもできる。たとえば、個々の危険な生物についてPythonモジュール
(実在するものも想像上のものも含み、背景知識や防御のためのヒントなどを提供する)を格納するcrittersというパッケージを作ろうとしたとする。
こういうパッケージは時間とともに大きくなるので、どこに住んでいるかによって分類したいと思ったとする。crittersの下に地域ごとにサブパッケージを
追加して、既存の.pyモジュールファイルをそこに移すという方法もあるが、そうするとcrittersをインポートしている他のモジュールが動かなくなる恐れがある。
代わりに、上のディレクトリに移って、次のようなことをすればよい。

・crittersの上に新しい地域ディレクトリを作る。
・この新しい親の下にイトコにあたるcrittersディレクトリを作る。
・既存モジュールをそれぞれの位置に移動する。

具体例を使って説明しよう。最初は次のようなディレクトリ構造だったとする。

critters
└ rougarou.py
└ wendigo.py

これらもモジュールを通常にインポートするためには、次のようなコードを書くことになる。

from critters import rougarou, wendigo

このパッケージをnorthとsouthに分割することにしたとする。
ファイルとディレクトリは次のようになるだろう。

north
└ critters
 └ wendigo.py

south
└ critters
 └ rougarou.py

northとsouthが両方ともモジュール検索パスに含まれているなら、これらのモジュールはまだ1個のディレクトリにまとめられた
パッケージに共存しているかのようにインポートできる。

from critters import rougarou, wendigo
"""
