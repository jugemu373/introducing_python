# ビット演算子
"""
Pythonは、C言語とよく似たビットレベル整数演算子を提供している。以下にまとめている。
整数x(10進で5, 2進で0b0101)とy(10進で1, 2進で0b0001)を使って計算した結果も含まれている。

演算子  :   説明            :   例      :   10進の結果  :   2進の結果
&       :   論理積          :   x & y   :   1          :    0b0001
|       :   論理和          :   x | y   :   5          :    0b0101
^       :   排他的論理和    :   x ^ y   :   4           :   0b0100
~       :   ビット反転      :   ~x      :   -6          :   2進表現は整数のサイズ次第で変わる
<<      :   左シフト        :   x << 1  :   10          :   0b1010
>>      :   右シフト        :   x >> 1  :   2           :   0b0010

$演算子は、両引数でともにセットされているビットを返す。
|演算子は、どちらかの引数でセットされているビットを返す。
^演算子は、片方だけでセットされているビットを返す。
~演算子は、1つだけの引数のすべてのビットを反転する。
現在のすべてのコンピュータが採用している2の補数表現では、整数の最上位ビットは符号(1なら負数を)を表すので、こうすると符号も反転する。
<<, >>演算子は、ビットをただ左右に動かす。1ビット分の左シフトは2でかけるのと同じであり、1ビット分の右シフトは2で割るのと同じである。
"""