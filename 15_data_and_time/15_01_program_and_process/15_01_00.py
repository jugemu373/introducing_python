# プログラムとプロセス
"""
個別のプログラムを実行すると、OSはプロセスを1つ作る。プロセスはシステムリソース(CPU、メモリ、ディスクスペース)とOSの
カーネルのデータ構造(ファイル、ネットワーク接続、利用統計など)を使う。プロセスは他のプロセスから切り離されている。
他のプロセスが何をしているのかを覗いたり、他のプロセスお作業を邪魔したりすることはできない。

OSは、実行されているすべてのプロセスを管理しており、それぞれに少しずつ実行時間を与えては、他のプロセスに移っていく。
これは、すべてのプロセスに公平に処理の機会を与え、ユーザに対して機敏に反応するという2つの目的のためだ。
プロセスの状態は、macOSのアクティビティモニタやWindowsのタスクマネージャ、Linuxのtopコマンドなどのグラフィカル
インタフェースで表示できる。
プロセスデータにはプログラム自身からもアクセスできる。標準ライブラリのosモジュールは、システム情報にアクセスするための
方法を提供している。たとえば、次の関数は、実行されているPythonインタプリタのプロセスIDとカレントディレクトリを取得する。
"""
import os
print(os.getpid())
print(os.getcwd())

"以下の関数は、ユーザIDとグループIDを取得する。"
# print(os.getuid())
# print(os.getgid())
